package main

import (
	"fmt"
)

// Цифровой корень
// Цифровой корень натурального числа — это цифра, полученная в результате итеративного процесса суммирования цифр,
// на каждой итерации которого для подсчета суммы цифр берут результат, полученный на предыдущей итерации.
// Этот процесс повторяется до тех пор, пока не будет получена одна цифра.
// Например цифровой корень 65536 это 7 , потому что 6+5+5+3+6=25 и 2+5=7 .
// По данному числу определите его цифровой корень.
// Входные данные
// Вводится одно натуральное число n, не превышающее 10^710
// 7
// Выходные данные
// Вывести цифровой корень числа n.
// Sample Input:
// 3456
// Sample Output:
// 9

func main() {
	var a int
	fmt.Scan(&a)
	var x int
	var y int
	var z int

	for i := 0; i < 10; i++ {
		x += a % 10
		a = a / 10
		//fmt.Println("x", x)
		if a%10 == 0 {
			break
		}
	}

	for i := 0; i < 10; i++ {
		y += x % 10
		x = x / 10
		//fmt.Println("y", y)
		if x%10 == 0 {
			break
		}
	}
	for i := 0; i < 10; i++ {
		x += z % 10
		z = z / 10
		//fmt.Println("y", y)
		if y%10 == 0 {
			break
		}
	}
	switch {
	case z > 0:
		fmt.Println(z)
	case y > 0:
		fmt.Println(y)
	case x > 0:
		fmt.Println(x)
	}
}
